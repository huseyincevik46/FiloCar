// <auto-generated />
using System;
using FiloCar.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiloCar.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428082627_İnitialCrate")]
    partial class İnitialCrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiloCar.Domain.Entity.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmans");

                    b.HasData(
                        new
                        {
                            DepartmanId = 1111,
                            City = "Siirt",
                            District = "Buckinghamshire",
                            Name = "Beauty"
                        },
                        new
                        {
                            DepartmanId = 2222,
                            City = "Edirne",
                            District = "Cambridgeshire",
                            Name = "Toys, Toys & Clothing"
                        },
                        new
                        {
                            DepartmanId = 3333,
                            City = "Ankara",
                            District = "Cambridgeshire",
                            Name = "Industrial"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DriverId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("Drives");

                    b.HasData(
                        new
                        {
                            DriverId = 11,
                            DepartmanId = 1111,
                            FirstName = "Bağaşatulu",
                            FullName = "Kızılalma Eliçin",
                            LastName = "Öymen",
                            LicenseNumber = "mx5gmnt4lt",
                            PhoneNumber = "+90-332-460-31-49"
                        },
                        new
                        {
                            DriverId = 22,
                            DepartmanId = 2222,
                            FirstName = "Arslan",
                            FullName = "Alkabölük Kumcuoğlu",
                            LastName = "Erkekli",
                            LicenseNumber = "sq3e4zq1l1",
                            PhoneNumber = "+90-197-052-41-69"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.FuelLog", b =>
                {
                    b.Property<int>("FuelLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelLogId"));

                    b.Property<int>("CurrentKm")
                        .HasColumnType("int");

                    b.Property<DateTime>("FuelDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Liter")
                        .HasColumnType("float");

                    b.Property<double>("LiterCount")
                        .HasColumnType("float");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("FuelLogId");

                    b.HasIndex("StationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelLogs");

                    b.HasData(
                        new
                        {
                            FuelLogId = 23,
                            CurrentKm = 32895,
                            FuelDate = new DateTime(2025, 4, 18, 14, 23, 12, 366, DateTimeKind.Local).AddTicks(6147),
                            Liter = 75.098612857556105,
                            LiterCount = 33.827015628182259,
                            StationId = 1,
                            VehicleId = 1
                        },
                        new
                        {
                            FuelLogId = 24,
                            CurrentKm = 16466,
                            FuelDate = new DateTime(2025, 4, 24, 8, 10, 56, 891, DateTimeKind.Local).AddTicks(6888),
                            Liter = 54.451350319454228,
                            LiterCount = 37.346315823447043,
                            StationId = 2,
                            VehicleId = 2
                        },
                        new
                        {
                            FuelLogId = 25,
                            CurrentKm = 13059,
                            FuelDate = new DateTime(2025, 4, 22, 17, 13, 22, 508, DateTimeKind.Local).AddTicks(7780),
                            Liter = 74.196870141311308,
                            LiterCount = 32.669592387590775,
                            StationId = 3,
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KmAtMaintenance")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceRecords");

                    b.HasData(
                        new
                        {
                            Id = 41,
                            Cost = 662.83000000000004,
                            Description = "Sit umut architecto masanın gitti.",
                            KmAtMaintenance = 205830,
                            MaintenanceDate = new DateTime(2018, 5, 7, 23, 31, 31, 529, DateTimeKind.Local).AddTicks(5751),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 42,
                            Cost = 197.83000000000001,
                            Description = "Numquam qui eius adipisci rem ona molestiae sequi.",
                            KmAtMaintenance = 261933,
                            MaintenanceDate = new DateTime(2020, 11, 2, 3, 33, 48, 632, DateTimeKind.Local).AddTicks(4163),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 43,
                            Cost = 945.78999999999996,
                            Description = "Sarmal dolore qui.",
                            KmAtMaintenance = 84267,
                            MaintenanceDate = new DateTime(2017, 10, 11, 20, 28, 55, 629, DateTimeKind.Local).AddTicks(5209),
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<int>("FuelLogId")
                        .HasColumnType("int");

                    b.Property<string>("StationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            FuelLogId = 0,
                            StationAddress = "Lütfi Karadirek Caddesi 40a, Bilecik, Vallis ve Futuna, Fransa",
                            StationName = "Eronat, Taşlı and Erçetin",
                            StationPhone = "+90-882-013-65-03"
                        },
                        new
                        {
                            StationId = 2,
                            FuelLogId = 0,
                            StationAddress = "Köypınar Sokak 86, Tunceli, Surinam",
                            StationName = "Akışık - Hamzaoğlu",
                            StationPhone = "+90-802-865-55-95"
                        },
                        new
                        {
                            StationId = 3,
                            FuelLogId = 0,
                            StationAddress = "Okul Sokak 35a, Van, Tonga",
                            StationName = "Türkdoğan - Dizdar ",
                            StationPhone = "+90-929-568-2-311"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            AddTime = new DateTime(2017, 3, 27, 15, 8, 56, 253, DateTimeKind.Local).AddTicks(1379),
                            Brand = "Rolls Royce",
                            DepartmanId = 2222,
                            FuelType = "Dizel",
                            IsActive = false,
                            Km = 130376,
                            Model = "El Camino",
                            PlateNumber = "46ABO463",
                            Year = 2015
                        },
                        new
                        {
                            VehicleId = 2,
                            AddTime = new DateTime(2018, 6, 23, 10, 47, 19, 71, DateTimeKind.Local).AddTicks(3328),
                            Brand = "Jeep",
                            FuelType = "LPG",
                            IsActive = true,
                            Km = 179840,
                            Model = "Civic",
                            PlateNumber = "46ABC463",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 3,
                            AddTime = new DateTime(2020, 9, 20, 19, 12, 10, 579, DateTimeKind.Local).AddTicks(925),
                            Brand = "Bugatti",
                            FuelType = "Benzin",
                            IsActive = true,
                            Km = 123900,
                            Model = "Civic",
                            PlateNumber = "46ABD463",
                            Year = 2018
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.VehicleAssigment", b =>
                {
                    b.Property<int>("VehicleAssigmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleAssigmentId"));

                    b.Property<DateTime?>("AssignmentEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AssignmentStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("VehicleAssigmentId");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleAssigments");

                    b.HasData(
                        new
                        {
                            VehicleAssigmentId = 50,
                            AssignmentStart = new DateTime(2023, 4, 29, 12, 4, 45, 752, DateTimeKind.Local).AddTicks(1190),
                            DriverId = 11,
                            Notes = "Quae deleniti doloremque filmini non koştum camisi.",
                            VehicleId = 1
                        },
                        new
                        {
                            VehicleAssigmentId = 51,
                            AssignmentStart = new DateTime(2023, 4, 29, 12, 4, 45, 752, DateTimeKind.Local).AddTicks(1190),
                            DriverId = 22,
                            Notes = "Et ki incidunt molestiae hesap voluptatem sıfat.",
                            VehicleId = 2
                        },
                        new
                        {
                            VehicleAssigmentId = 52,
                            AssignmentEnd = new DateTime(2023, 5, 25, 2, 13, 52, 744, DateTimeKind.Local).AddTicks(7281),
                            AssignmentStart = new DateTime(2023, 4, 29, 12, 4, 45, 752, DateTimeKind.Local).AddTicks(1190),
                            DriverId = 22,
                            Notes = "Batarya göze tempora et patlıcan.",
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Departman", "Departman")
                        .WithMany("Drivers")
                        .HasForeignKey("DepartmanId");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.FuelLog", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Station", "Station")
                        .WithMany("FuelLogs")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("FuelLogs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.MaintenanceRecord", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Departman", "Departman")
                        .WithMany("Vehicles")
                        .HasForeignKey("DepartmanId");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.VehicleAssigment", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Driver", "Driver")
                        .WithMany("Assignments")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("Assignments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Departman", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Station", b =>
                {
                    b.Navigation("FuelLogs");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("FuelLogs");

                    b.Navigation("MaintenanceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
