// <auto-generated />
using System;
using FiloCar.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiloCar.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428102009_İnitalCreate2")]
    partial class İnitalCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiloCar.Domain.Entity.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmans");

                    b.HasData(
                        new
                        {
                            DepartmanId = 1111,
                            City = "Adana",
                            District = "Berkshire",
                            Name = "Toys"
                        },
                        new
                        {
                            DepartmanId = 2222,
                            City = "Samsun",
                            District = "Avon",
                            Name = "Sports & Baby"
                        },
                        new
                        {
                            DepartmanId = 3333,
                            City = "Sakarya",
                            District = "Cambridgeshire",
                            Name = "Books & Home"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DriverId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("Drives");

                    b.HasData(
                        new
                        {
                            DriverId = 11,
                            DepartmanId = 1111,
                            FirstName = "Aygırak",
                            FullName = "Bayrak Küçükler",
                            LastName = "Bademci",
                            LicenseNumber = "4hnb6gjrw4",
                            PhoneNumber = "+90-398-842-5-779"
                        },
                        new
                        {
                            DriverId = 22,
                            DepartmanId = 2222,
                            FirstName = "Arslanyabgu",
                            FullName = "Aşantuğrul Baturalp",
                            LastName = "Okumuş",
                            LicenseNumber = "qfls0dgb9b",
                            PhoneNumber = "+90-761-166-0-236"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.FuelLog", b =>
                {
                    b.Property<int>("FuelLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelLogId"));

                    b.Property<int>("CurrentKm")
                        .HasColumnType("int");

                    b.Property<DateTime>("FuelDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Liter")
                        .HasColumnType("float");

                    b.Property<double>("LiterCount")
                        .HasColumnType("float");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("FuelLogId");

                    b.HasIndex("StationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelLogs");

                    b.HasData(
                        new
                        {
                            FuelLogId = 23,
                            CurrentKm = 32805,
                            FuelDate = new DateTime(2025, 4, 24, 2, 12, 26, 830, DateTimeKind.Local).AddTicks(6195),
                            Liter = 69.071781622572644,
                            LiterCount = 38.084491492288159,
                            StationId = 1,
                            VehicleId = 1
                        },
                        new
                        {
                            FuelLogId = 24,
                            CurrentKm = 23859,
                            FuelDate = new DateTime(2025, 4, 21, 19, 31, 24, 413, DateTimeKind.Local).AddTicks(2751),
                            Liter = 78.609987615365384,
                            LiterCount = 38.519382708337758,
                            StationId = 2,
                            VehicleId = 2
                        },
                        new
                        {
                            FuelLogId = 25,
                            CurrentKm = 35953,
                            FuelDate = new DateTime(2025, 4, 23, 22, 22, 51, 916, DateTimeKind.Local).AddTicks(8970),
                            Liter = 48.227943607585502,
                            LiterCount = 36.773876455589757,
                            StationId = 3,
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KmAtMaintenance")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("MaintenanceRecords");

                    b.HasData(
                        new
                        {
                            Id = 41,
                            Cost = 615.63,
                            Description = "Esse sunt ekşili okuma exercitationem filmini un.",
                            KmAtMaintenance = 275037,
                            MaintenanceDate = new DateTime(2017, 8, 2, 16, 8, 48, 940, DateTimeKind.Local).AddTicks(6415),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 42,
                            Cost = 490.66000000000003,
                            Description = "Veritatis ötekinden dignissimos göze.",
                            KmAtMaintenance = 150425,
                            MaintenanceDate = new DateTime(2018, 9, 19, 4, 48, 8, 611, DateTimeKind.Local).AddTicks(6551),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 43,
                            Cost = 938.94000000000005,
                            Description = "Qui praesentium uzattı aperiam dignissimos sıradanlıktan kutusu dolayı sayfası karşıdakine.",
                            KmAtMaintenance = 161101,
                            MaintenanceDate = new DateTime(2020, 9, 25, 9, 40, 3, 664, DateTimeKind.Local).AddTicks(2117),
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<int>("FuelLogId")
                        .HasColumnType("int");

                    b.Property<string>("StationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            FuelLogId = 0,
                            StationAddress = "Nalbant Sokak 444, Osmaniye, İzlanda",
                            StationName = "Akgül, Atan and Akyüz",
                            StationPhone = "+90-581-956-06-62"
                        },
                        new
                        {
                            StationId = 2,
                            FuelLogId = 0,
                            StationAddress = "Oğuzhan Sokak 8, İstanbul, Avustralya",
                            StationName = "Kuday - Berberoğlu",
                            StationPhone = "+90-820-307-8-076"
                        },
                        new
                        {
                            StationId = 3,
                            FuelLogId = 0,
                            StationAddress = "Oğuzhan Sokak 67b, Gümüşhane, Brunei",
                            StationName = "Yorulmaz Inc",
                            StationPhone = "+90-165-362-91-00"
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            AddTime = new DateTime(2017, 8, 2, 7, 0, 23, 843, DateTimeKind.Local).AddTicks(8222),
                            Brand = "Jeep",
                            DepartmanId = 2222,
                            FuelType = "Dizel",
                            IsActive = true,
                            Km = 185785,
                            Model = "Spyder",
                            PlateNumber = "46ABO463",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 2,
                            AddTime = new DateTime(2025, 3, 31, 20, 15, 14, 788, DateTimeKind.Local).AddTicks(6948),
                            Brand = "Audi",
                            FuelType = "LPG",
                            IsActive = true,
                            Km = 49973,
                            Model = "Alpine",
                            PlateNumber = "46ABC463",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 3,
                            AddTime = new DateTime(2019, 5, 26, 18, 21, 26, 293, DateTimeKind.Local).AddTicks(9729),
                            Brand = "Hyundai",
                            FuelType = "Benzin",
                            IsActive = true,
                            Km = 165772,
                            Model = "Malibu",
                            PlateNumber = "46ABD463",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.VehicleAssigment", b =>
                {
                    b.Property<int>("VehicleAssigmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleAssigmentId"));

                    b.Property<DateTime?>("AssignmentEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AssignmentStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("VehicleAssigmentId");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleAssigments");

                    b.HasData(
                        new
                        {
                            VehicleAssigmentId = 50,
                            AssignmentStart = new DateTime(2023, 5, 16, 4, 38, 46, 828, DateTimeKind.Local).AddTicks(8976),
                            DriverId = 11,
                            Notes = "Magnam ratione değerli sıradanlıktan ve quam duyulmamış.",
                            VehicleId = 1
                        },
                        new
                        {
                            VehicleAssigmentId = 51,
                            AssignmentStart = new DateTime(2023, 5, 16, 4, 38, 46, 828, DateTimeKind.Local).AddTicks(8976),
                            DriverId = 22,
                            Notes = "Eaque orta et olduğu sıla.",
                            VehicleId = 2
                        },
                        new
                        {
                            VehicleAssigmentId = 52,
                            AssignmentStart = new DateTime(2023, 5, 16, 4, 38, 46, 828, DateTimeKind.Local).AddTicks(8976),
                            DriverId = 22,
                            Notes = "Kutusu çarpan magni gidecekmiş ipsa.",
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Departman", "Departman")
                        .WithMany("Drivers")
                        .HasForeignKey("DepartmanId");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.FuelLog", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Station", "Station")
                        .WithMany("FuelLogs")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("FuelLogs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.MaintenanceRecord", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Departman", "Departman")
                        .WithMany("Vehicles")
                        .HasForeignKey("DepartmanId");

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.VehicleAssigment", b =>
                {
                    b.HasOne("FiloCar.Domain.Entity.Driver", "Driver")
                        .WithMany("Assignments")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiloCar.Domain.Entity.Vehicle", "Vehicle")
                        .WithMany("Assignments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Departman", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Driver", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Station", b =>
                {
                    b.Navigation("FuelLogs");
                });

            modelBuilder.Entity("FiloCar.Domain.Entity.Vehicle", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("FuelLogs");

                    b.Navigation("MaintenanceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
